version: "3.9"

name: tutorbot-prod-like

# Puedes exportar TAG para usar un sha/versión concreta:
#   TAG=abc123 docker compose -f docker-compose.prod.yml up -d
# En Windows PowerShell:
#   $env:TAG="abc123"; docker compose -f docker-compose.prod.yml up -d

services:
  mongo:
    image: mongo:6
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-net

  backend:
    image: docker.io/diego0102/zajuna-backend:${TAG:-latest}
    container_name: backend
    restart: unless-stopped
    env_file:
      - ./backend/.env.prod
    environment:
      # Overrides para entorno compose (interna de red)
      MONGO_URI: mongodb://mongo:27017/tutor_virtual
      MONGO_DB_NAME: tutor_virtual
      RASA_URL: http://rasa:5005
      FRONTEND_SITE_URL: http://localhost:8080
      ALLOWED_ORIGINS: http://localhost:8080,http://localhost:5173
      APP_ENV: prod
      DEBUG: "false"
    depends_on:
      - mongo
      - rasa
    ports:
      - "8000:8000"
    networks:
      - app-net

  rasa:
    image: docker.io/diego0102/zajuna-rasa:${TAG:-latest}
    container_name: rasa
    restart: unless-stopped
    environment:
      ACTION_SERVER_URL: http://action-server:5055/webhook
    depends_on:
      - action-server
    ports:
      - "5005:5005"
    networks:
      - app-net

  action-server:
    image: docker.io/diego0102/zajuna-action:${TAG:-latest}
    container_name: action-server
    restart: unless-stopped
    ports:
      - "5055:5055"
    networks:
      - app-net

  admin:
    image: docker.io/diego0102/zajuna-admin:${TAG:-latest}
    container_name: admin
    restart: unless-stopped
    # Normalmente el admin es estático y no necesita ENV en runtime
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  mongo-data: