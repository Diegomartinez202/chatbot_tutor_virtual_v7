name: E2E Preview (Railway)

on:
  workflow_dispatch:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

concurrency:
  group: e2e-preview-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      # ⚙️ URL del frontend ya desplegado en Railway (preview o prod)
      PLAYWRIGHT_BASE_URL: ${{ vars.RAILWAY_FRONTEND_URL || secrets.RAILWAY_FRONTEND_URL }}
      # ⚙️ Base del backend/chat en Railway (termina en /api/chat)
      CHAT_BASE: ${{ vars.RAILWAY_BACKEND_CHAT_BASE || secrets.RAILWAY_BACKEND_CHAT_BASE }}

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      - name: 🟢 Comprobar variables requeridas
        run: |
          echo "PLAYWRIGHT_BASE_URL=$PLAYWRIGHT_BASE_URL"
          echo "CHAT_BASE=$CHAT_BASE"
          if [ -z "$PLAYWRIGHT_BASE_URL" ]; then
            echo "Falta PLAYWRIGHT_BASE_URL (vars o secrets)."
            exit 1
          fi
          if [ -z "$CHAT_BASE" ]; then
            echo "Falta CHAT_BASE (vars o secrets)."
            exit 1
          fi

      - name: ⏳ Esperar a que el frontend esté arriba
        run: |
          URL="$PLAYWRIGHT_BASE_URL"
          echo "Esperando $URL ..."
          for i in {1..60}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$URL" || true)
            echo "Intento $i => HTTP $code"
            if [ "$code" -ge 200 ] && [ "$code" -lt 500 ]; then
              echo "Frontend OK ($code)"; break
            fi
            sleep 5
          done

      - name: ⏳ Esperar a que el backend /api/chat/health responda
        run: |
          HEALTH="${CHAT_BASE%/}/health"
          echo "Esperando $HEALTH ..."
          for i in {1..60}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$HEALTH" || true)
            echo "Intento $i => HTTP $code"
            if [ "$code" -ge 200 ] && [ "$code" -lt 500 ]; then
              echo "Backend health OK ($code)"; break
            fi
            sleep 5
          done

      - name: 🟢 Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Instalar deps
        run: npm ci

      - name: 🎭 Instalar Playwright (browsers + deps)
        run: npx playwright install --with-deps

      - name: 🧪 E2E
        run: npm run test:e2e
        env:
          PLAYWRIGHT_BASE_URL: ${{ env.PLAYWRIGHT_BASE_URL }}
          CHAT_BASE: ${{ env.CHAT_BASE }}

      - name: 📎 Subir reporte Playwright
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7